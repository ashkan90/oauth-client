// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/oauth/processor.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	oauth "oauth-client/pkg/oauth"
	model "oauth-client/pkg/oauthclient/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	oauth2 "golang.org/x/oauth2"
)

// MockProcessor is a mock of Processor interface.
type MockProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockProcessorMockRecorder
}

// MockProcessorMockRecorder is the mock recorder for MockProcessor.
type MockProcessorMockRecorder struct {
	mock *MockProcessor
}

// NewMockProcessor creates a new mock instance.
func NewMockProcessor(ctrl *gomock.Controller) *MockProcessor {
	mock := &MockProcessor{ctrl: ctrl}
	mock.recorder = &MockProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockProcessor) EXPECT() *MockProcessorMockRecorder {
	return m.recorder
}

// BuildLoginURL mocks base method.
func (m *MockProcessor) BuildLoginURL() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BuildLoginURL")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BuildLoginURL indicates an expected call of BuildLoginURL.
func (mr *MockProcessorMockRecorder) BuildLoginURL() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BuildLoginURL", reflect.TypeOf((*MockProcessor)(nil).BuildLoginURL))
}

// GetExchange mocks base method.
func (m *MockProcessor) GetExchange(c context.Context, resp oauth.CallbackResponse) (*oauth2.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExchange", c, resp)
	ret0, _ := ret[0].(*oauth2.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetExchange indicates an expected call of GetExchange.
func (mr *MockProcessorMockRecorder) GetExchange(c, resp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExchange", reflect.TypeOf((*MockProcessor)(nil).GetExchange), c, resp)
}

// GetUserInfo mocks base method.
func (m *MockProcessor) GetUserInfo(c context.Context, tok *oauth2.Token) (*model.Generic, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserInfo", c, tok)
	ret0, _ := ret[0].(*model.Generic)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserInfo indicates an expected call of GetUserInfo.
func (mr *MockProcessorMockRecorder) GetUserInfo(c, tok interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserInfo", reflect.TypeOf((*MockProcessor)(nil).GetUserInfo), c, tok)
}
